/*
#  BEAA - Behavior Animal Analyzer - Analisador de comportamento animal
#  Copyright 2019: Richard William Valdivia
#  E-mail: rwvaldivia@yahoo.com.br
#  
#  Este programa é um software livre; você pode redistribui-lo e/ou 
#  modifica-lo dentro dos termos da Licença Pública Geral GNU como 
#  publicada pela Fundação do Software Livre (FSF); na versão 2 da 
#  Licença, ou (na sua opinião) qualquer versão.
#
#  Este programa é distribuído na esperança que possa ser util, 
#  mas SEM NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
#  MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a
#  Licença Pública Geral GNU para maiores detalhes.
#
#  Você deve ter recebido uma cópia da Licença Pública Geral GNU
#  junto com este programa, se não, escreva para a Fundação do Software
#  Livre(FSF) Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
*/
package br.com.protowork.gui;

import br.com.protowork.engine.ImageProcess;
import br.com.protowork.thread.ThreadUtil;
import br.com.protowork.vo.Project;
import br.com.protowork.xml.PresetXmlCreator;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author richardv
 */
public class ImageProcGUI extends javax.swing.JFrame {

   private NewProjectModal dialogModal;
   private DataBaseTrainningGUI databaseDialogModal;
   private boolean visualizacaoProcessamento = false;
   private static List<Project> listProjectInProcessament = new ArrayList<>();
   private static ImageProcGUI mySelfInstance;
    /**
     * Creates new form ImageProcGUI
     */
    public ImageProcGUI() {
        initComponents();
        ImageProcGUI.setMySelf(this);
    }
    
    public static void setMySelf(ImageProcGUI j){
        mySelfInstance = j;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovoProjeto = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblSensibilidade = new javax.swing.JLabel();
        sliderSensibilidade = new javax.swing.JSlider();
        lblBlur = new javax.swing.JLabel();
        sliderBlur = new javax.swing.JSlider();
        lblSensibilityValue = new javax.swing.JLabel();
        lblBlurValue = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnProcessarVideo = new javax.swing.JButton();
        lblRegioes = new javax.swing.JLabel();
        lblRegioesTotal = new javax.swing.JLabel();
        scrollPaneTbPresets = new javax.swing.JScrollPane();
        tbProjetos = new javax.swing.JTable();
        btnExcluirProjeto = new javax.swing.JButton();
        btnPreview = new javax.swing.JButton();
        btnVisualizarProc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProjetosProcessamento = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnTreinamento = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Processamento de Imagens");
        setResizable(false);

        btnNovoProjeto.setText("Novo Projeto");
        btnNovoProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProjetoActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Processador de Vídeo");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configurações avançadas"));

        lblSensibilidade.setText("Sensibilidade:");

        sliderSensibilidade.setMaximum(40);
        sliderSensibilidade.setMinimum(1);
        sliderSensibilidade.setEnabled(false);

        lblBlur.setText("Blur:");

        sliderBlur.setMaximum(40);
        sliderBlur.setMinimum(1);
        sliderBlur.setEnabled(false);

        lblSensibilityValue.setText("0");

        lblBlurValue.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblSensibilidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBlur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBlurValue, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(lblSensibilityValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sliderBlur, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addComponent(sliderSensibilidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSensibilidade)
                        .addComponent(lblSensibilityValue))
                    .addComponent(sliderSensibilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBlur)
                        .addComponent(lblBlurValue))
                    .addComponent(sliderBlur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Projetos"));

        btnProcessarVideo.setText("Processar Vídeo");
        btnProcessarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessarVideoActionPerformed(evt);
            }
        });

        lblRegioes.setText("Total de Regiões:");

        lblRegioesTotal.setText("0");

        tbProjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Projeto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProjetos.setColumnSelectionAllowed(true);
        tbProjetos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickTableHandler(evt);
            }
        });
        scrollPaneTbPresets.setViewportView(tbProjetos);
        tbProjetos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnExcluirProjeto.setText("Excluir Projeto");
        btnExcluirProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProjetoActionPerformed(evt);
            }
        });

        btnPreview.setText("Preview");
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        btnVisualizarProc.setText("Visualizar Processamento");
        btnVisualizarProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarProcActionPerformed(evt);
            }
        });

        tbProjetosProcessamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Projeto(s) em processamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbProjetosProcessamento);

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Para finalizar pressione ESC na Janela de video");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(scrollPaneTbPresets)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblRegioes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblRegioesTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirProjeto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVisualizarProc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProcessarVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(scrollPaneTbPresets, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcessarVideo)
                    .addComponent(lblRegioes)
                    .addComponent(lblRegioesTotal)
                    .addComponent(btnExcluirProjeto)
                    .addComponent(btnPreview))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVisualizarProc)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(363, 363, 363))
        );

        btnTreinamento.setText("Criar base de treinamento");
        btnTreinamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreinamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnNovoProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTreinamento, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(62, 62, 62)
                            .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoProjeto)
                    .addComponent(btnSair)
                    .addComponent(btnTreinamento))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProjetoActionPerformed

        if (this.dialogModal == null) {
            dialogModal = new NewProjectModal(this, true);
        }
        dialogModal.setObservableWindow(this);
        dialogModal.setLocationRelativeTo(this);
        dialogModal.helperCleanFields();
        dialogModal.setVisible(true);
        
    }//GEN-LAST:event_btnNovoProjetoActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        
        if (ImageProcGUI.listProjectInProcessament.size() > 0){
            String msg = ""
                    + "Existem processos ainda em execução\n"
                    + "Para finalizar os processos siga os seguintes passos:\n\n"
                    + "1 - Clique no botão \"Visualizar Processamento\"\n"
                    + "2 - Pressione ESC em cada janela de procesamento e aguarde a finalização";
            JOptionPane.showMessageDialog(null, msg);
            return;
        }
        
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnProcessarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessarVideoActionPerformed
        
        //#########################
        //TODO
        //Obter a lista de presets
        //Fazer o parse do xml
        
        int selectedRowIndex = this.tbProjetos.getSelectedRow();
        
        if (selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Selecione um projeto na tabela de Presets");
            return;
        }
        
        List<Project> projects = new PresetXmlCreator().loadXMLPreset();
        Project proj = projects.get(selectedRowIndex);
        
        for (int i = 0; i < ImageProcGUI.listProjectInProcessament.size(); i ++){
            if (ImageProcGUI.listProjectInProcessament.get(i).getIdProject() == proj.getIdProject()){
                JOptionPane.showMessageDialog(null, "Projeto atualmente em processamento. Aguarde o término!!!");
                return;
            }
        }
        
        proj.setThreadGroupSession(ThreadUtil.getNextTheadGroupSession());
        ImageProcess p = new ImageProcess();
        
        ImageProcGUI.listProjectInProcessament.add(proj);
        
        this.updateTableProjectsInProcess(this.listProjectInProcessament);
        
        p.processSelectedProject(proj);
        
    }//GEN-LAST:event_btnProcessarVideoActionPerformed

    private void btnExcluirProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProjetoActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = this.tbProjetos.getSelectedRow();
        
        if (selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Selecione um projeto para excluir");
            return;
        }
        
        if (JOptionPane.showConfirmDialog(null, "Deseja Realmente excluir o projeto " + selectedRowIndex + "?\nEssa operação não poderá ser revertida", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            PresetXmlCreator xml = new PresetXmlCreator();
            List<Project> projetos = xml.loadXMLPreset();
            projetos.remove(selectedRowIndex);
            xml.setProjectList(projetos);
            xml.generateXML();
            this.updateProjectsTable(projetos);
        } 
        
        
    }//GEN-LAST:event_btnExcluirProjetoActionPerformed

    private void clickTableHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickTableHandler
        // TODO add your handling code here:
        int selectedRowIndex = this.tbProjetos.getSelectedRow();
        PresetXmlCreator xml = new PresetXmlCreator();
        List<Project> projetos = xml.loadXMLPreset();
        Project p = projetos.get(selectedRowIndex);
        
        int totalRegioes = p.getListRegions().size();
        this.lblRegioesTotal.setText(String.valueOf(totalRegioes));
        
        
        int blur = p.getBlurLevel();
        int sensibility = p.getSensibilityLevel();
        this.sliderBlur.setValue(blur);
        this.sliderSensibilidade.setValue(sensibility);
        
        this.lblBlurValue.setText(String.valueOf(blur));
        this.lblSensibilityValue.setText(String.valueOf(sensibility));
        
        
    }//GEN-LAST:event_clickTableHandler

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = this.tbProjetos.getSelectedRow();
        
        if (selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Selecione um projeto na tabela para realizar o preview");
            return;
        }
        
        List<Project> projects = new PresetXmlCreator().loadXMLPreset();
        Project proj = projects.get(selectedRowIndex);
        ImageProcess p = new ImageProcess();
        
        p.previewVideo(proj);
        
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnVisualizarProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarProcActionPerformed
        // TODO add your handling code here:
        
        if (!this.visualizacaoProcessamento) {
            if (JOptionPane.showConfirmDialog(null, "O modo de visualização de processamento aumenta\nsignificativamente o tempo de processamento!\nDeseja continuar com o modo de Visualização de Processamento?", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                new ImageProcess().showWindowProcessImage();
            } else {
                return;
            } 
        } else {
             new ImageProcess().showWindowProcessImage();
        }
        
        if (!this.visualizacaoProcessamento){
            this.btnVisualizarProc.setText("Encerrar Visualização");
        } else {
            this.btnVisualizarProc.setText("Visualizar Processamento");
        }
        
        this.visualizacaoProcessamento = !this.visualizacaoProcessamento;
    }//GEN-LAST:event_btnVisualizarProcActionPerformed

    private void btnTreinamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreinamentoActionPerformed
        // TODO add your handling code here:
        
         if (this.databaseDialogModal == null) {
            databaseDialogModal = new DataBaseTrainningGUI(this, true);
        }
        //databaseDialogModal.setObservableWindow(this);
        databaseDialogModal.setLocationRelativeTo(this);
        //databaseDialogModal.helperCleanFields();
        databaseDialogModal.setVisible(true);
        
    }//GEN-LAST:event_btnTreinamentoActionPerformed

    public static void threadChannelNotifier(int projectIdTerminated){
        
        for (int i = 0; i < ImageProcGUI.listProjectInProcessament.size(); i++){
            if (ImageProcGUI.listProjectInProcessament.get(i).getIdProject() == projectIdTerminated){
                ImageProcGUI.listProjectInProcessament.remove(i);
                ImageProcGUI.mySelfInstance.updateTableProjectsInProcess(ImageProcGUI.listProjectInProcessament);
                break;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageProcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageProcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageProcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageProcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ImageProcGUI gui = new ImageProcGUI();
                gui.setLocationRelativeTo(null);
                PresetXmlCreator xml = new PresetXmlCreator();
                gui.updateProjectsTable(xml.loadXMLPreset());
                
                gui.setVisible(true);
            }
        });
    }
    
    public void updateProjectsTable(List<Project> projetos){
        
        if (projetos == null){
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)this.tbProjetos.getModel();
        model.setRowCount(0);

        //String [] row = new String[projetos.size()];

        for (int i = 0 ; i < projetos.size(); i++){
            String [] row = new String[1];
            row[0] = projetos.get(i).getProjectName();
            model.addRow(row);
        }
        
        this.tbProjetos.setModel(model);
        
        model.fireTableDataChanged();
    }
    
    public  void updateTableProjectsInProcess(List<Project> projetos){
        
        if (projetos == null){
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)this.tbProjetosProcessamento.getModel();
        model.setRowCount(0);

        //String [] row = new String[projetos.size()];

        for (int i = 0 ; i < projetos.size(); i++){
            String [] row = new String[1];
            row[0] = projetos.get(i).getProjectName();
            model.addRow(row);
        }
        
        this.tbProjetosProcessamento.setModel(model);
        
        model.fireTableDataChanged();
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluirProjeto;
    private javax.swing.JButton btnNovoProjeto;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnProcessarVideo;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnTreinamento;
    private javax.swing.JButton btnVisualizarProc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBlur;
    private javax.swing.JLabel lblBlurValue;
    private javax.swing.JLabel lblRegioes;
    private javax.swing.JLabel lblRegioesTotal;
    private javax.swing.JLabel lblSensibilidade;
    private javax.swing.JLabel lblSensibilityValue;
    private javax.swing.JScrollPane scrollPaneTbPresets;
    private javax.swing.JSlider sliderBlur;
    private javax.swing.JSlider sliderSensibilidade;
    private javax.swing.JTable tbProjetos;
    private javax.swing.JTable tbProjetosProcessamento;
    // End of variables declaration//GEN-END:variables
}
